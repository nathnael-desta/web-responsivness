{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nimport _imports_0 from '../assets/calendar.svg';\nimport _imports_1 from '../assets/clock.svg';\nimport _imports_2 from '../assets/dollar.svg';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"event-container\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"info\"\n};\nconst _hoisted_4 = {\n  class: \"info-top\"\n};\nconst _hoisted_5 = {\n  class: \"info-bottom\"\n};\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"time\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"price\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.events ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [true ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $props.event.imageSrc,\n    alt: $props.event.imageAlt\n  }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.event.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createTextVNode(_toDisplayString($props.event.date), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createTextVNode(_toDisplayString($props.event.time), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createTextVNode(_toDisplayString($props.event.price), 1 /* TEXT */)])])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","key","class","_createElementVNode","src","alt","$props","events","_createElementBlock","_hoisted_1","event","imageSrc","imageAlt","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_toDisplayString","name","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","date","_hoisted_8","_hoisted_9","time","_hoisted_10","_hoisted_11","price"],"sources":["/home/nate/Documents/repos/web-responsivness/web_responsivness/webandresponsivness/src/components/EventPoster.vue"],"sourcesContent":["<template>\n  <div v-if=\"events\" class=\"event-container\">\n    <img \n    v-if=\"\"\n    :src=\"event.imageSrc\" \n    :alt=\"event.imageAlt\"\n    >\n    <div class=\"info\">\n      <div class=\"info-top\">{{ event.name }}</div>\n      <div class=\"info-bottom\">\n        <div class=\"date\"><img src=\"../assets/calendar.svg\" alt=\"\">{{ event.date }}</div>\n        <div class=\"time\"><img src=\"../assets/clock.svg\" alt=\"\">{{ event.time }}</div>\n        <div class=\"price\"><img src=\"../assets/dollar.svg\" alt=\"\">{{ event.price }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props:['events', 'currentEvent', \"event\"],\n  computed: {\n    daysText() {\n      const daysLeft = this.daysUntil(this.events[this.currentEvent].date)\n      console.log(daysLeft);\n      if (daysLeft > 3) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft > 1) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft === 1) {\n        return `${daysLeft} day left`;\n      }\n      if (daysLeft === 0) {\n        return 'today';\n      }\n\n      return 'passed';\n    }\n  },\n  methods: {\n    daysUntil(targetDate) {\n      const currentDate = new Date();\n\n      const target = new Date(targetDate);\n\n      let [day, month, year] = targetDate.split(\" \");\n\n\n      const months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\"\n      }\n\n      month = months[month];\n\n      const diffTime = target - currentDate;\n      \n      // from milliseconds to days\n\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      return diffDays;\n\n    }\n  }\n};\n</script>\n"],"mappings":";OAU+BA,UAA4B;OAC5BC,UAAyB;OACxBC,UAA0B;;EAZ1DC,GAAA;EACqBC,KAAK,EAAC;;mBAD3B;;EAOSA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAM;gCAACC,mBAAA,CAAyC;EAApCC,GAA4B,EAA5BN,UAA4B;EAACO,GAAG,EAAC;;;EACnDH,KAAK,EAAC;AAAM;gCAACC,mBAAA,CAAsC;EAAjCC,GAAyB,EAAzBL,UAAyB;EAACM,GAAG,EAAC;;;EAChDH,KAAK,EAAC;AAAO;iCAACC,mBAAA,CAAuC;EAAlCC,GAA0B,EAA1BJ,UAA0B;EAACK,GAAG,EAAC;;;SAXlDC,MAAA,CAAAC,MAAM,I,cAAjBC,mBAAA,CAcM,OAdNC,UAcM,GAZE,Q,cADND,mBAAA,CAIC;IANLP,GAAA;IAIKG,GAAG,EAAEE,MAAA,CAAAI,KAAK,CAACC,QAAQ;IACnBN,GAAG,EAAEC,MAAA,CAAAI,KAAK,CAACE;0BALhBC,UAAA,KAAAC,mBAAA,gBAOIX,mBAAA,CAOM,OAPNY,UAOM,GANJZ,mBAAA,CAA4C,OAA5Ca,UAA4C,EAAAC,gBAAA,CAAnBX,MAAA,CAAAI,KAAK,CAACQ,IAAI,kBACnCf,mBAAA,CAIM,OAJNgB,UAIM,GAHJhB,mBAAA,CAAiF,OAAjFiB,UAAiF,GAA/DC,UAAyC,EAVnEC,gBAAA,CAAAL,gBAAA,CAUsEX,MAAA,CAAAI,KAAK,CAACa,IAAI,iB,GACxEpB,mBAAA,CAA8E,OAA9EqB,UAA8E,GAA5DC,UAAsC,EAXhEH,gBAAA,CAAAL,gBAAA,CAWmEX,MAAA,CAAAI,KAAK,CAACgB,IAAI,iB,GACrEvB,mBAAA,CAAiF,OAAjFwB,WAAiF,GAA9DC,WAAuC,EAZlEN,gBAAA,CAAAL,gBAAA,CAYqEX,MAAA,CAAAI,KAAK,CAACmB,KAAK,iB,WAZhFf,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}