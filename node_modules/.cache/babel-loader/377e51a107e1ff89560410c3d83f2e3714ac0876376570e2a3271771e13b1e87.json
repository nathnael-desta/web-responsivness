{"ast":null,"code":"import _slicedToArray from \"/home/nate/Documents/repos/web-responsivness/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nexport default {\n  props: ['events', 'currentEvent', 'event'],\n  computed: {\n    activeClasses: function activeClasses() {\n      return {\n        green: this.daysLeft > 3,\n        yellow: this.daysLeft > 1 && this.daysLeft < 4,\n        red: this.daysLeft === 0 || this.daysLeft === 1,\n        grey: this.daysLeft < 0\n      };\n    },\n    daysLeft: function daysLeft() {\n      return this.daysUntil(this.events[this.currentEvent].date);\n    },\n    daysText: function daysText() {\n      if (this.daysLeft > 3) {\n        return \"\".concat(this.daysLeft, \" days left\");\n      }\n      if (this.daysLeft > 1) {\n        return \"\".concat(this.daysLeft, \" days left\");\n      }\n      if (this.daysLeft === 1) {\n        return \"\".concat(this.daysLeft, \" day left\");\n      }\n      if (this.daysLeft === 0) {\n        return 'today';\n      }\n      return 'passed';\n    }\n  },\n  methods: {\n    daysUntil: function daysUntil(targetDate) {\n      var currentDate = new Date();\n      var target = new Date(targetDate);\n      var _targetDate$split = targetDate.split(' '),\n        _targetDate$split2 = _slicedToArray(_targetDate$split, 3),\n        day = _targetDate$split2[0],\n        month = _targetDate$split2[1],\n        year = _targetDate$split2[2];\n      var months = {\n        Jan: '01',\n        Feb: '02',\n        Mar: '03',\n        Apr: '04',\n        May: '05',\n        Jun: '06',\n        Jul: '07',\n        Aug: '08',\n        Sep: '09',\n        Oct: '10',\n        Nov: '11',\n        Dec: '12'\n      };\n      month = months[month];\n      var diffTime = target - currentDate;\n\n      // from milliseconds to days\n\n      var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays;\n    }\n  }\n};","map":{"version":3,"names":["props","computed","activeClasses","green","daysLeft","yellow","red","grey","daysUntil","events","currentEvent","date","daysText","concat","methods","targetDate","currentDate","Date","target","_targetDate$split","split","_targetDate$split2","_slicedToArray","day","month","year","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","diffTime","diffDays","Math","ceil"],"sources":["/home/nate/Documents/repos/web-responsivness/src/components/EventTitle.vue"],"sourcesContent":["<template>\n\t<div\n    v-if=\"event\"\n\t\tclass=\"event-title\"\n\t>\n\t\t<div class=\"title\">{{ event.name }}</div>\n\t\t<div class=\"event-details-bottom\">\n\t\t\t<div class=\"organizer\">{{ event.organizer }}</div>\n\t\t\t<div \n      class=\"days-left yellow\"\n      >{{ daysText }}</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tprops: ['events', 'currentEvent', 'event'],\n\t\tcomputed: {\n      activeClasses() {\n        return {\n          green: this.daysLeft > 3,\n          yellow: this.daysLeft > 1 && this.daysLeft < 4,\n          red: this.daysLeft === 0 || this.daysLeft === 1, \n          grey: this.daysLeft < 0\n        }\n      },\n      daysLeft() {\n        return this.daysUntil(this.events[this.currentEvent].date);\n      },\n\t\t\tdaysText() {\n\n\t\t\t\tif (this.daysLeft > 3) {\n\t\t\t\t\treturn `${this.daysLeft} days left`;\n\t\t\t\t}\n\t\t\t\tif (this.daysLeft > 1) {\n\t\t\t\t\treturn `${this.daysLeft} days left`;\n\t\t\t\t}\n\t\t\t\tif (this.daysLeft === 1) {\n\t\t\t\t\treturn `${this.daysLeft} day left`;\n\t\t\t\t}\n\t\t\t\tif (this.daysLeft === 0) {\n\t\t\t\t\treturn 'today';\n\t\t\t\t}\n\n\t\t\t\treturn 'passed';\n\t\t\t},\n\t\t},\n\t\tmethods: {\n\t\t\tdaysUntil(targetDate) {\n\t\t\t\tconst currentDate = new Date();\n\n\t\t\t\tconst target = new Date(targetDate);\n\n\t\t\t\tlet [day, month, year] = targetDate.split(' ');\n\n\t\t\t\tconst months = {\n\t\t\t\t\tJan: '01',\n\t\t\t\t\tFeb: '02',\n\t\t\t\t\tMar: '03',\n\t\t\t\t\tApr: '04',\n\t\t\t\t\tMay: '05',\n\t\t\t\t\tJun: '06',\n\t\t\t\t\tJul: '07',\n\t\t\t\t\tAug: '08',\n\t\t\t\t\tSep: '09',\n\t\t\t\t\tOct: '10',\n\t\t\t\t\tNov: '11',\n\t\t\t\t\tDec: '12',\n\t\t\t\t};\n\n\t\t\t\tmonth = months[month];\n\n\t\t\t\tconst diffTime = target - currentDate;\n\n\t\t\t\t// from milliseconds to days\n\n\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n\t\t\t\treturn diffDays;\n\t\t\t},\n\t\t},\n\t};\n</script>\n"],"mappings":";;AAgBC,eAAe;EACdA,KAAK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,CAAC;EAC1CC,QAAQ,EAAE;IACNC,aAAa,WAAAA,cAAA,EAAG;MACd,OAAO;QACLC,KAAK,EAAE,IAAI,CAACC,QAAO,GAAI,CAAC;QACxBC,MAAM,EAAE,IAAI,CAACD,QAAO,GAAI,KAAK,IAAI,CAACA,QAAO,GAAI,CAAC;QAC9CE,GAAG,EAAE,IAAI,CAACF,QAAO,KAAM,KAAK,IAAI,CAACA,QAAO,KAAM,CAAC;QAC/CG,IAAI,EAAE,IAAI,CAACH,QAAO,GAAI;MACxB;IACF,CAAC;IACDA,QAAQ,WAAAA,SAAA,EAAG;MACT,OAAO,IAAI,CAACI,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,YAAY,CAAC,CAACC,IAAI,CAAC;IAC5D,CAAC;IACJC,QAAQ,WAAAA,SAAA,EAAG;MAEV,IAAI,IAAI,CAACR,QAAO,GAAI,CAAC,EAAE;QACtB,UAAAS,MAAA,CAAU,IAAI,CAACT,QAAQ;MACxB;MACA,IAAI,IAAI,CAACA,QAAO,GAAI,CAAC,EAAE;QACtB,UAAAS,MAAA,CAAU,IAAI,CAACT,QAAQ;MACxB;MACA,IAAI,IAAI,CAACA,QAAO,KAAM,CAAC,EAAE;QACxB,UAAAS,MAAA,CAAU,IAAI,CAACT,QAAQ;MACxB;MACA,IAAI,IAAI,CAACA,QAAO,KAAM,CAAC,EAAE;QACxB,OAAO,OAAO;MACf;MAEA,OAAO,QAAQ;IAChB;EACD,CAAC;EACDU,OAAO,EAAE;IACRN,SAAS,WAAAA,UAACO,UAAU,EAAE;MACrB,IAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAE9B,IAAMC,MAAK,GAAI,IAAID,IAAI,CAACF,UAAU,CAAC;MAEnC,IAAAI,iBAAA,GAAyBJ,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC;QAAAC,kBAAA,GAAAC,cAAA,CAAAH,iBAAA;QAAzCI,GAAG,GAAAF,kBAAA;QAAEG,KAAK,GAAAH,kBAAA;QAAEI,IAAI,GAAAJ,kBAAA;MAErB,IAAMK,MAAK,GAAI;QACdC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE;MACN,CAAC;MAEDd,KAAI,GAAIE,MAAM,CAACF,KAAK,CAAC;MAErB,IAAMe,QAAO,GAAIrB,MAAK,GAAIF,WAAW;;MAErC;;MAEA,IAAMwB,QAAO,GAAIC,IAAI,CAACC,IAAI,CAACH,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;MAE5D,OAAOC,QAAQ;IAChB;EACD;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}