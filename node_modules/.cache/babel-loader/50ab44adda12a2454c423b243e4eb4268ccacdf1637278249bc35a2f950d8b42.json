{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"event-details\"\n};\nconst _hoisted_2 = {\n  class: \"title\"\n};\nconst _hoisted_3 = {\n  class: \"event-details-bottom\"\n};\nconst _hoisted_4 = {\n  class: \"organizer\"\n};\nconst _hoisted_5 = {\n  class: \"days-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.events ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($props.event.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.event.organizer), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.daysText), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","events","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","event","name","_hoisted_3","_hoisted_4","organizer","_hoisted_5","$options","daysText","_createCommentVNode"],"sources":["/home/nate/Documents/repos/web-responsivness/web_responsivness/webandresponsivness/src/components/EventDetails.vue"],"sourcesContent":["<template>\n\t<div\n\t\tv-if=\"events\"\n\t\tclass=\"event-details\"\n\t>\n\t\t<div class=\"title\">{{ event.name }}</div>\n\t\t<div class=\"event-details-bottom\">\n\t\t\t<div class=\"organizer\">{{ event.organizer }}</div>\n\t\t\t<div class=\"days-left\">{{ daysText }}</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tprops: ['events', 'currentEvent', 'event'],\n    computed: {\n    daysText() {\n      const daysLeft = this.daysUntil(this.events[this.currentEvent].date)\n\n      if (daysLeft > 3) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft > 1) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft === 1) {\n        return `${daysLeft} day left`;\n      }\n      if (daysLeft === 0) {\n        return 'today';\n      }\n\n      return 'passed';\n    }\n  },\n  methods: {\n    daysUntil(targetDate) {\n      const currentDate = new Date();\n\n      const target = new Date(targetDate);\n\n      let [day, month, year] = targetDate.split(\" \");\n\n\n      const months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\"\n      }\n\n      month = months[month];\n\n      const diffTime = target - currentDate;\n      \n      // from milliseconds to days\n\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      return diffDays;\n\n    }\n  }\n\t};\n</script>\n"],"mappings":";;EAAAA,GAAA;EAGEC,KAAK,EAAC;;;EAEDA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAsB;;EAC3BA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;SANjBC,MAAA,CAAAC,MAAM,I,cADbC,mBAAA,CASM,OATNC,UASM,GALLC,mBAAA,CAAyC,OAAzCC,UAAyC,EAAAC,gBAAA,CAAnBN,MAAA,CAAAO,KAAK,CAACC,IAAI,kBAChCJ,mBAAA,CAGM,OAHNK,UAGM,GAFLL,mBAAA,CAAkD,OAAlDM,UAAkD,EAAAJ,gBAAA,CAAxBN,MAAA,CAAAO,KAAK,CAACI,SAAS,kBACzCP,mBAAA,CAA2C,OAA3CQ,UAA2C,EAAAN,gBAAA,CAAjBO,QAAA,CAAAC,QAAQ,iB,OARrCC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}