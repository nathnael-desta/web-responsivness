{"ast":null,"code":"export default {\n  props: ['events', 'currentEvent', \"event\"],\n  computed: {\n    daysText() {\n      const daysLeft = this.daysUntil(this.events[this.currentEvent].date);\n      console.log(daysLeft);\n      if (daysLeft > 3) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft > 1) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft === 1) {\n        return `${daysLeft} day left`;\n      }\n      if (daysLeft === 0) {\n        return 'today';\n      }\n      return 'passed';\n    }\n  },\n  methods: {\n    daysUntil(targetDate) {\n      const currentDate = new Date();\n      const target = new Date(targetDate);\n      let [day, month, year] = targetDate.split(\" \");\n      const months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\"\n      };\n      month = months[month];\n      const diffTime = target - currentDate;\n\n      // from milliseconds to days\n\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays;\n    }\n  }\n};","map":{"version":3,"names":["props","computed","daysText","daysLeft","daysUntil","events","currentEvent","date","console","log","methods","targetDate","currentDate","Date","target","day","month","year","split","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","diffTime","diffDays","Math","ceil"],"sources":["/home/nate/Documents/repos/web-responsivness/web_responsivness/webandresponsivness/src/components/EventPoster.vue"],"sourcesContent":["<template>\n  <div v-if=\"events\" class=\"event-container\">\n    <img \n    v-if=\"event\"\n    :src=\"event.imageSrc\" \n    :alt=\"event.imageAlt\"\n    >\n    <div class=\"info\">\n      <div class=\"info-top\">{{ event.name }}</div>\n      <div class=\"info-bottom\">\n        <div class=\"date\"><img src=\"../assets/calendar.svg\" alt=\"\">{{ event.date }}</div>\n        <div class=\"time\"><img src=\"../assets/clock.svg\" alt=\"\">{{ event.time }}</div>\n        <div class=\"price\"><img src=\"../assets/dollar.svg\" alt=\"\">{{ event.price }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props:['events', 'currentEvent', \"event\"],\n  computed: {\n    daysText() {\n      const daysLeft = this.daysUntil(this.events[this.currentEvent].date)\n      console.log(daysLeft);\n      if (daysLeft > 3) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft > 1) {\n        return `${daysLeft} days left`;\n      }\n      if (daysLeft === 1) {\n        return `${daysLeft} day left`;\n      }\n      if (daysLeft === 0) {\n        return 'today';\n      }\n\n      return 'passed';\n    }\n  },\n  methods: {\n    daysUntil(targetDate) {\n      const currentDate = new Date();\n\n      const target = new Date(targetDate);\n\n      let [day, month, year] = targetDate.split(\" \");\n\n\n      const months = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\"\n      }\n\n      month = months[month];\n\n      const diffTime = target - currentDate;\n      \n      // from milliseconds to days\n\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n      return diffDays;\n\n    }\n  }\n};\n</script>\n"],"mappings":"AAmBA,eAAe;EACbA,KAAK,EAAC,CAAC,QAAQ,EAAE,cAAc,EAAE,OAAO,CAAC;EACzCC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,MAAMC,QAAO,GAAI,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,YAAY,CAAC,CAACC,IAAI;MACnEC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrB,IAAIA,QAAO,GAAI,CAAC,EAAE;QAChB,OAAO,GAAGA,QAAQ,YAAY;MAChC;MACA,IAAIA,QAAO,GAAI,CAAC,EAAE;QAChB,OAAO,GAAGA,QAAQ,YAAY;MAChC;MACA,IAAIA,QAAO,KAAM,CAAC,EAAE;QAClB,OAAO,GAAGA,QAAQ,WAAW;MAC/B;MACA,IAAIA,QAAO,KAAM,CAAC,EAAE;QAClB,OAAO,OAAO;MAChB;MAEA,OAAO,QAAQ;IACjB;EACF,CAAC;EACDO,OAAO,EAAE;IACPN,SAASA,CAACO,UAAU,EAAE;MACpB,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAE9B,MAAMC,MAAK,GAAI,IAAID,IAAI,CAACF,UAAU,CAAC;MAEnC,IAAI,CAACI,GAAG,EAAEC,KAAK,EAAEC,IAAI,IAAIN,UAAU,CAACO,KAAK,CAAC,GAAG,CAAC;MAG9C,MAAMC,MAAK,GAAI;QACbC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE;MACP;MAEAf,KAAI,GAAIG,MAAM,CAACH,KAAK,CAAC;MAErB,MAAMgB,QAAO,GAAIlB,MAAK,GAAIF,WAAW;;MAErC;;MAEA,MAAMqB,QAAO,GAAIC,IAAI,CAACC,IAAI,CAACH,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;MAE5D,OAAOC,QAAQ;IAEjB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}